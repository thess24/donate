


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>hopscotch/js/hopscotch-0.1.2.min.js at master Â· linkedin/hopscotch</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="https://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta property="og:image" content="https://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png">
    <meta name="hostname" content="github-fe111-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 1.9.3p194-tcs-github-tcmalloc (0e75de19f8) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="32A59C4A:6699:13AC0C2:5271B70E" name="octolytics-dimension-request_id" /><meta content="3950411" name="octolytics-actor-id" /><meta content="thess24" name="octolytics-actor-login" /><meta content="fa3fff4e2f8d26e3b3ed97f19ac9db64b8ea9b321bf50e4b53f71db5fdb75f6c" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="7Al2DU6SasDEL8EuFR+7HM2uVTUmF+UkKTxNwbh4cTQ=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-c1c8f4d1225e3ae12e7eed7a87e6125ec4f4c50a.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-8fec94fba24057242ac5eac0b01b2fd60b5d3812.css" media="all" rel="stylesheet" type="text/css" />
    

    

      <script src="https://github.global.ssl.fastly.net/assets/frameworks-fedd15115b82c3d5d2afa34f475ba2caa6283613.js" type="text/javascript"></script>
      <script src="https://github.global.ssl.fastly.net/assets/github-ccddde7443989910dd83a01393e3eae42fefe313.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="f4ceb2d064b3adad5e97504bf2042d70">

        <link data-pjax-transient rel='permalink' href='/linkedin/hopscotch/blob/b41ab659507175264ab6347d0032f03e42b961d1/js/hopscotch-0.1.2.min.js'>
  <meta property="og:title" content="hopscotch"/>
  <meta property="og:type" content="githubog:gitrepository"/>
  <meta property="og:url" content="https://github.com/linkedin/hopscotch"/>
  <meta property="og:image" content="https://github.global.ssl.fastly.net/images/gravatars/gravatar-user-420.png"/>
  <meta property="og:site_name" content="GitHub"/>
  <meta property="og:description" content="hopscotch - A framework to make it easy for developers to add product tours to their pages."/>

  <meta name="description" content="hopscotch - A framework to make it easy for developers to add product tours to their pages." />

  <meta content="357098" name="octolytics-dimension-user_id" /><meta content="linkedin" name="octolytics-dimension-user_login" /><meta content="10091574" name="octolytics-dimension-repository_id" /><meta content="linkedin/hopscotch" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="10091574" name="octolytics-dimension-repository_network_root_id" /><meta content="linkedin/hopscotch" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/linkedin/hopscotch/commits/master.atom" rel="alternate" title="Recent Commits to hopscotch:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production linux vis-public  page-blob">
    <div class="wrapper">
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" class="notification-indicator tooltipped downwards" data-gotokey="n" title="You have no unread notifications">
        <span class="mail-status all-read"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey=" s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="thess24"
      data-repo="linkedin/hopscotch"
      data-branch="master"
      data-sha="a26deeb760423376a0df9416e5fadedf1cf47070"
  >

    <input type="hidden" name="nwo" value="linkedin/hopscotch" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/thess24" class="name">
        <img height="20" src="https://0.gravatar.com/avatar/f7d13309134e8dbec7129c242000e17d?d=https%3A%2F%2Fidenticons.github.com%2Fc3fac89cafdfbc3b32ad3d147a4daa75.png&amp;r=x&amp;s=140" width="20" /> thess24
      </a>
    </li>

      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo" aria-label="Create a new repo">
          <span class="octicon octicon-repo-create"></span>
        </a>
      </li>

      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          aria-label="Account settings "
          title="Account settings ">
          <span class="octicon octicon-tools"></span>
        </a>
      </li>
      <li>
        <a class="tooltipped downwards" href="/logout" data-method="post" id="logout" title="Sign out" aria-label="Sign out">
          <span class="octicon octicon-log-out"></span>
        </a>
      </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>



    <li class="section-title">
      <span title="linkedin/hopscotch">This repository</span>
    </li>
      <li>
        <a href="/linkedin/hopscotch/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

      




          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="7Al2DU6SasDEL8EuFR+7HM2uVTUmF+UkKTxNwbh4cTQ=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="10091574" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/linkedin/hopscotch/watchers">
        76
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for discussions in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  
<div class="js-toggler-container js-social-container starring-container on">
  <a href="/linkedin/hopscotch/unstar" class="minibutton with-count js-toggler-target star-button starred upwards" title="Unstar this repo" data-remote="true" data-method="post" rel="nofollow">
    <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
  </a>
  <a href="/linkedin/hopscotch/star" class="minibutton with-count js-toggler-target star-button unstarred upwards" title="Star this repo" data-remote="true" data-method="post" rel="nofollow">
    <span class="octicon octicon-star"></span><span class="text">Star</span>
  </a>
  <a class="social-count js-social-count" href="/linkedin/hopscotch/stargazers">1,531</a>
</div>

  </li>


        <li>
          <a href="/linkedin/hopscotch/fork" class="minibutton with-count js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="nofollow" data-method="post">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/linkedin/hopscotch/network" class="social-count">148</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/linkedin" class="url fn" itemprop="url" rel="author"><span itemprop="title">linkedin</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/linkedin/hopscotch" class="js-current-repository js-repo-home-link">hopscotch</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">

      <div class="repository-with-sidebar repo-container ">

        <div class="repository-sidebar">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped leftwards" title="Code">
        <a href="/linkedin/hopscotch" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /linkedin/hopscotch">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped leftwards" title="Issues">
          <a href="/linkedin/hopscotch/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /linkedin/hopscotch/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>17</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped leftwards" title="Pull Requests"><a href="/linkedin/hopscotch/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /linkedin/hopscotch/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>3</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped leftwards" title="Wiki">
          <a href="/linkedin/hopscotch/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_wiki /linkedin/hopscotch/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped leftwards" title="Pulse">
        <a href="/linkedin/hopscotch/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /linkedin/hopscotch/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Graphs">
        <a href="/linkedin/hopscotch/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /linkedin/hopscotch/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Network">
        <a href="/linkedin/hopscotch/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /linkedin/hopscotch/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

            <div class="only-with-full-nav">
              

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/linkedin/hopscotch.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/linkedin/hopscotch.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:linkedin/hopscotch.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="git@github.com:linkedin/hopscotch.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/linkedin/hopscotch" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/linkedin/hopscotch" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="octicon help tooltipped upwards" title="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>



              <a href="/linkedin/hopscotch/archive/master.zip"
                 class="minibutton sidebar-button"
                 title="Download this repository as a zip file"
                 rel="nofollow">
                <span class="octicon octicon-cloud-download"></span>
                Download ZIP
              </a>
            </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:967b37007d0272733ccba1e34c231056 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/linkedin/hopscotch/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/linkedin/hopscotch/blob/gh-pages/js/hopscotch-0.1.2.min.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/linkedin/hopscotch/blob/master/js/hopscotch-0.1.2.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/linkedin/hopscotch" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">hopscotch</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/linkedin/hopscotch/tree/master/js" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">js</span></a></span><span class="separator"> / </span><strong class="final-path">hopscotch-0.1.2.min.js</strong> <span class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="js/hopscotch-0.1.2.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>



  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://1.gravatar.com/avatar/f915612caa51801852586b4e631abd98?d=https%3A%2F%2Fidenticons.github.com%2F3fee83be409389118ee8bd50cc933fa2.png&amp;r=x&amp;s=140" width="24" />
    <span class="author"><a href="/gkoo" rel="author">gkoo</a></span>
    <time class="js-relative-date" datetime="2013-09-16T14:49:08-07:00" title="2013-09-16 14:49:08">September 16, 2013</time>
    <div class="commit-title">
        <a href="/linkedin/hopscotch/commit/a6265d2f0295635a35b240a081a9f12675057259" class="message" data-pjax="true" title="bump version num">bump version num</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img height="24" src="https://1.gravatar.com/avatar/f915612caa51801852586b4e631abd98?d=https%3A%2F%2Fidenticons.github.com%2F3fee83be409389118ee8bd50cc933fa2.png&amp;r=x&amp;s=140" width="24" />
            <a href="/gkoo">gkoo</a>
          </li>
      </ul>
    </div>
  </div>

<div id="files" class="bubble">
  <div class="file">
    <div class="meta">
      <div class="info">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
          <span>17 lines (17 sloc)</span>
        <span>19.633 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
                <a class="minibutton tooltipped upwards"
                   title="Clicking this button will automatically fork this project so you can edit the file"
                   href="/linkedin/hopscotch/edit/master/js/hopscotch-0.1.2.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/linkedin/hopscotch/raw/master/js/hopscotch-0.1.2.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/linkedin/hopscotch/blame/master/js/hopscotch-0.1.2.min.js" class="button minibutton ">Blame</a>
          <a href="/linkedin/hopscotch/commits/master/js/hopscotch-0.1.2.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger empty-icon tooltipped downwards"
             href="/linkedin/hopscotch/delete/master/js/hopscotch-0.1.2.min.js"
             title="Fork this project and delete file"
             data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          Delete
        </a>
      </div><!-- /.actions -->

    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>

            </td>
            <td class="blob-line-code">
                    <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/**!</span></div><div class='line' id='LC2'><span class="cm">*</span></div><div class='line' id='LC3'><span class="cm">* Copyright 2013 LinkedIn Corp. All rights reserved.</span></div><div class='line' id='LC4'><span class="cm">*</span></div><div class='line' id='LC5'><span class="cm">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div><div class='line' id='LC6'><span class="cm">* you may not use this file except in compliance with the License.</span></div><div class='line' id='LC7'><span class="cm">* You may obtain a copy of the License at</span></div><div class='line' id='LC8'><span class="cm">*</span></div><div class='line' id='LC9'><span class="cm">*     http://www.apache.org/licenses/LICENSE-2.0</span></div><div class='line' id='LC10'><span class="cm">*</span></div><div class='line' id='LC11'><span class="cm">* Unless required by applicable law or agreed to in writing, software</span></div><div class='line' id='LC12'><span class="cm">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div><div class='line' id='LC13'><span class="cm">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div><div class='line' id='LC14'><span class="cm">* See the License for the specific language governing permissions and</span></div><div class='line' id='LC15'><span class="cm">* limitations under the License.</span></div><div class='line' id='LC16'><span class="cm">*/</span></div><div class='line' id='LC17'><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">Sizzle</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="o">!==</span><span class="nx">o</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">sessionStorage</span><span class="o">!==</span><span class="nx">o</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nb">document</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="p">{</span><span class="nx">smoothScroll</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scrollDuration</span><span class="o">:</span><span class="mi">1</span><span class="nx">e3</span><span class="p">,</span><span class="nx">scrollTopMargin</span><span class="o">:</span><span class="mi">200</span><span class="p">,</span><span class="nx">showCloseButton</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">showPrevButton</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">showNextButton</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">bubbleWidth</span><span class="o">:</span><span class="mi">280</span><span class="p">,</span><span class="nx">bubblePadding</span><span class="o">:</span><span class="mi">15</span><span class="p">,</span><span class="nx">arrowWidth</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">skipIfNoElement</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">cookieName</span><span class="o">:</span><span class="s2">&quot;hopscotch.tour.state&quot;</span><span class="p">},</span><span class="nx">n</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;[object Array]&quot;</span><span class="o">===</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">startTour</span><span class="p">()},</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">addClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="o">++</span><span class="nx">e</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">removeClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="o">++</span><span class="nx">e</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">getPixelValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">valOrDefault</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">!==</span><span class="nx">o</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">invokeCallbackArrayHelper</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">invokeCallbackArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">invokeCallbackArrayHelper</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeCallback</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])}},</span><span class="nx">invokeCallback</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">]()</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeCallbackArray</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">invokeEventCallbacks</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">invokeCallback</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">invokeCallback</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">cb</span><span class="p">)},</span><span class="nx">getScrollTop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">!==</span><span class="nx">o</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">},</span><span class="nx">getScrollLeft</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">!==</span><span class="nx">o</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">},</span><span class="nx">getWindowHeight</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">innerHeight</span><span class="o">||</span><span class="nx">s</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">},</span><span class="nx">getWindowWidth</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">innerWidth</span><span class="o">||</span><span class="nx">s</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">clientWidth</span><span class="p">},</span><span class="nx">addEvtListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">removeEvtListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">documentIsReady</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;complete&quot;</span><span class="o">===</span><span class="nx">s</span><span class="p">.</span><span class="nx">readyState</span><span class="o">||</span><span class="s2">&quot;interactive&quot;</span><span class="o">===</span><span class="nx">s</span><span class="p">.</span><span class="nx">readyState</span><span class="p">},</span><span class="nx">evtPreventDefault</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()</span><span class="o">:</span><span class="nx">event</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=!</span><span class="mi">1</span><span class="p">)},</span><span class="nx">extend</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])},</span><span class="nx">getStepTargetHelper</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">return</span><span class="sr">/^[#\.]/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">s</span><span class="p">.</span><span class="nx">querySelector</span><span class="o">?</span><span class="nx">s</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">q</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">jQuery</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="sr">/^#[a-zA-Z][\w-_:.]*$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">s</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="kc">null</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">getStepTarget</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getStepTargetHelper</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getStepTargetHelper</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">[</span><span class="nx">c</span><span class="p">])))</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">},</span><span class="nx">getI18NString</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">setState</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">r</span><span class="o">?</span><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">setTime</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="nx">e3</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">24</span><span class="o">*</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;; expires=&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">toGMTString</span><span class="p">()),</span><span class="nx">s</span><span class="p">.</span><span class="nx">cookie</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;; path=/&quot;</span><span class="p">)},</span><span class="nx">getState</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">cookie</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="s2">&quot; &quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">);)</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="k">break</span><span class="p">}}</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">clearState</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">r</span><span class="o">?</span><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)}},</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEvtListener</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="nx">next</span><span class="o">:</span><span class="p">[],</span><span class="nx">prev</span><span class="o">:</span><span class="p">[],</span><span class="nx">start</span><span class="o">:</span><span class="p">[],</span><span class="nx">end</span><span class="o">:</span><span class="p">[],</span><span class="nx">show</span><span class="o">:</span><span class="p">[],</span><span class="nx">error</span><span class="o">:</span><span class="p">[],</span><span class="nx">close</span><span class="o">:</span><span class="p">[]},</span><span class="nx">j</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">stepNums</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">nextBtn</span><span class="o">:</span><span class="s2">&quot;Next&quot;</span><span class="p">,</span><span class="nx">prevBtn</span><span class="o">:</span><span class="s2">&quot;Back&quot;</span><span class="p">,</span><span class="nx">doneBtn</span><span class="o">:</span><span class="s2">&quot;Done&quot;</span><span class="p">,</span><span class="nx">skipBtn</span><span class="o">:</span><span class="s2">&quot;Skip&quot;</span><span class="p">,</span><span class="nx">closeTooltip</span><span class="o">:</span><span class="s2">&quot;Close&quot;</span><span class="p">},</span><span class="nx">g</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">isShowing</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">currStep</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">_createButton</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;button&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;hopscotch-nav-button&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;prev&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="s2">&quot; prev&quot;</span><span class="o">:</span><span class="s2">&quot; next&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="p">},</span><span class="nx">setPosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getStepTarget</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowEl</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getPixelValue</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">bubbleWidth</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">valOrDefault</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">bubblePadding</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="s2">&quot;fade-in-down fade-in-up fade-in-left fade-in-right&quot;</span><span class="p">),</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">orientation</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">orientation</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">(),</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">c</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">arrowWidth</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">left</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">bottom</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">arrowWidth</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">left</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">b</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">d</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">j</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">arrowWidth</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">right</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">arrowWidth</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">arrowOffset</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">getPixelValue</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">arrowOffset</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">arrowOffset</span><span class="p">,</span><span class="nx">i</span><span class="o">?</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">||</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="nx">i</span><span class="o">?</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">d</span><span class="o">-</span><span class="nx">m</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="o">:</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="nx">i</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">d</span><span class="o">-</span><span class="nx">m</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">xOffset</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">d</span><span class="o">:</span><span class="nx">g</span><span class="o">+=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getPixelValue</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">xOffset</span><span class="p">),</span><span class="s2">&quot;center&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">yOffset</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">+=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getPixelValue</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">yOffset</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fixedElement</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">+=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getScrollTop</span><span class="p">(),</span><span class="nx">g</span><span class="o">+=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getScrollLeft</span><span class="p">()),</span><span class="nx">l</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fixedElement</span><span class="o">?</span><span class="s2">&quot;fixed&quot;</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">},</span><span class="nx">_initNavButtons</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">prevBtnEl</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_createButton</span><span class="p">(</span><span class="s2">&quot;hopscotch-prev&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">getI18NString</span><span class="p">(</span><span class="s2">&quot;prevBtn&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">nextBtnEl</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_createButton</span><span class="p">(</span><span class="s2">&quot;hopscotch-next&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">getI18NString</span><span class="p">(</span><span class="s2">&quot;nextBtn&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">doneBtnEl</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_createButton</span><span class="p">(</span><span class="s2">&quot;hopscotch-done&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">getI18NString</span><span class="p">(</span><span class="s2">&quot;doneBtn&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctaBtnEl</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_createButton</span><span class="p">(</span><span class="s2">&quot;hopscotch-cta&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doneBtnEl</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prevBtnEl</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctaBtnEl</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nextBtnEl</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doneBtnEl</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEvtListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prevBtnEl</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">n</span><span class="p">.</span><span class="nx">prevStep</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)}),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEvtListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nextBtnEl</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">n</span><span class="p">.</span><span class="nx">nextStep</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)}),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEvtListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doneBtnEl</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">n</span><span class="p">.</span><span class="nx">endTour</span><span class="p">()}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;hopscotch-actions&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">buttonsEl</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">containerEl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">_getCloseFn</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">closeFn</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">closeFn</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">onClose</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeCallback</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">onClose</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">id</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">isTourBubble</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">getCalloutManager</span><span class="p">().</span><span class="nx">removeCallout</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">destroy</span><span class="p">(),</span><span class="nx">h</span><span class="p">.</span><span class="nx">evtPreventDefault</span><span class="p">(</span><span class="nx">b</span><span class="p">)}),</span><span class="k">this</span><span class="p">.</span><span class="nx">closeFn</span><span class="p">},</span><span class="nx">initCloseButton</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;hopscotch-bubble-close&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="s2">&quot;#&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">title</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getI18NString</span><span class="p">(</span><span class="s2">&quot;closeTooltip&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getI18NString</span><span class="p">(</span><span class="s2">&quot;closeTooltip&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">isTourBubble</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEvtListener</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">getCurrStepNum</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">getCurrTour</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">steps</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeEventCallbacks</span><span class="p">(</span><span class="s2">&quot;close&quot;</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">endTour</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()</span><span class="o">:</span><span class="nx">event</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=!</span><span class="mi">1</span><span class="p">)})</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEvtListener</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_getCloseFn</span><span class="p">()),</span><span class="nx">h</span><span class="p">.</span><span class="nx">valOrDefault</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">showCloseButton</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">closeBtnEl</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">containerEl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">_initArrow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">arrowEl</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowEl</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;hopscotch-bubble-arrow-container&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;hopscotch-bubble-arrow-border&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;hopscotch-bubble-arrow&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowEl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowEl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowEl</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">_setupCTAButton</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_showButton</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctaBtnEl</span><span class="p">,</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">showCTAButton</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">showCTAButton</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctaLabel</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctaBtnEl</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctaLabel</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctaFn</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">isTourBubble</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">getCalloutManager</span><span class="p">().</span><span class="nx">removeCallout</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">onCTA</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">onCTA</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">onCTA</span><span class="p">()},</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEvtListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctaBtnEl</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctaFn</span><span class="p">))},</span><span class="nx">_removeCTACallback</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctaBtnEl</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctaFn</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeEvtListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctaBtnEl</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctaFn</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctaFn</span><span class="o">=</span><span class="kc">null</span><span class="p">)},</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">currStep</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">currStep</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currStep</span><span class="p">),</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">orientation</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">orientation</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">valOrDefault</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">showNextButton</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">showNextButton</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">valOrDefault</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">showPrevButton</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">showPrevButton</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">setTitle</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">title</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">setContent</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">content</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">isTourBubble</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setNum</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">placement</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">showPrevButton</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prevBtnEl</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">showNextButton</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nextBtnEl</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">nextBtnEl</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">showSkip</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">getI18NString</span><span class="p">(</span><span class="s2">&quot;skipBtn&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">getI18NString</span><span class="p">(</span><span class="s2">&quot;nextBtn&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doneBtnEl</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">doneBtnEl</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_setupCTAButton</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_setArrow</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getPixelValue</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">bubbleWidth</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">valOrDefault</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">bubblePadding</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">containerEl</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">containerEl</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">padding</span><span class="o">=</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">zindex</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">placement</span><span class="o">?</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;-9999px&quot;</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;-9999px&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">setPosition</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setPosition</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fixedElement</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">setTitle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">titleEl</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">titleEl</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">titleEl</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">setContent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">contentEl</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">contentEl</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">contentEl</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">setNum</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getI18NString</span><span class="p">(</span><span class="s2">&quot;stepNums&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="o">+=</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">numberEl</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">_setArrow</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowEl</span><span class="p">,</span><span class="s2">&quot;down up right left&quot;</span><span class="p">),</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowEl</span><span class="p">,</span><span class="s2">&quot;down&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowEl</span><span class="p">,</span><span class="s2">&quot;up&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowEl</span><span class="p">,</span><span class="s2">&quot;right&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">arrowEl</span><span class="p">,</span><span class="s2">&quot;left&quot;</span><span class="p">)},</span><span class="nx">_getArrowDirection</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;top&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">placement</span><span class="o">?</span><span class="s2">&quot;down&quot;</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">placement</span><span class="o">?</span><span class="s2">&quot;up&quot;</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">placement</span><span class="o">?</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">placement</span><span class="o">?</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;fade-in-&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_getArrowDirection</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="nx">e3</span><span class="p">;</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;invisible&quot;</span><span class="p">)},</span><span class="mi">50</span><span class="p">),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">isShowing</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">valOrDefault</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;invisible&quot;</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;hide&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;invisible&quot;</span><span class="p">)),</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;animate fade-in-up fade-in-down fade-in-right fade-in-left&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">isShowing</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="nx">_showButton</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="s2">&quot;hide&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;hide-all&quot;</span><span class="p">),</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">showPrevButton</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_showButton</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prevBtnEl</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">showNextButton</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_showButton</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nextBtnEl</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">showCloseButton</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_showButton</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">closeBtnEl</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">closeBtnEl</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeEvtListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">closeBtnEl</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_getCloseFn</span><span class="p">()),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctaBtnEl</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">onCTA</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_removeCTACallback</span><span class="p">()},</span><span class="nx">updateButtons</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">showPrevButton</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">showPrevButton</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">showNextButton</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">showNextButton</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">showCloseButton</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="p">.</span><span class="nx">showCloseButton</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">prevBtnEl</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getI18NString</span><span class="p">(</span><span class="s2">&quot;prevBtn&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">nextBtnEl</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getI18NString</span><span class="p">(</span><span class="s2">&quot;nextBtn&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">doneBtnEl</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getI18NString</span><span class="p">(</span><span class="s2">&quot;doneBtn&quot;</span><span class="p">)},</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">j</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">containerEl</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">titleEl</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;h3&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">contentEl</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">titleEl</span><span class="p">,</span><span class="s2">&quot;hopscotch-title&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">contentEl</span><span class="p">,</span><span class="s2">&quot;hopscotch-content&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">showPrevButton</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">showPrevButton</span><span class="p">,</span><span class="nx">showNextButton</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">showNextButton</span><span class="p">,</span><span class="nx">bubbleWidth</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">bubbleWidth</span><span class="p">,</span><span class="nx">bubblePadding</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">bubblePadding</span><span class="p">,</span><span class="nx">arrowWidth</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">arrowWidth</span><span class="p">,</span><span class="nx">showNumber</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">isTourBubble</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">a</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="nx">o</span><span class="o">?</span><span class="p">{}</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">opt</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;hopscotch-bubble animated&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;hopscotch-bubble-container&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">isTourBubble</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; hopscotch-callout&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">isTourBubble</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">numberEl</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">numberEl</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;hopscotch-bubble-number&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">numberEl</span><span class="p">))</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;no-number&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">titleEl</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">contentEl</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;hopscotch-bubble-content&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_initNavButtons</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">initCloseButton</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_initArrow</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="o">!</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">isShowing</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">.</span><span class="nx">setPosition</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">currStep</span><span class="p">),</span><span class="nx">j</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="mi">100</span><span class="p">))},</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEvtListener</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">hide</span><span class="p">(),</span><span class="nx">h</span><span class="p">.</span><span class="nx">documentIsReady</span><span class="p">()</span><span class="o">?</span><span class="nx">s</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">s</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nb">window</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;complete&quot;</span><span class="o">===</span><span class="nx">s</span><span class="p">.</span><span class="nx">readyState</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nb">window</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;onload&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">))},</span><span class="nx">s</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEvtListener</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">))}},</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">createCallout</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;Must specify a callout id.&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">])</span><span class="k">throw</span><span class="s2">&quot;Callout by that id already exists. Please choose a unique id.&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">showNextButton</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">showPrevButton</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">isTourBubble</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">show</span><span class="p">()}),</span><span class="nx">c</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">getCallout</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]},</span><span class="k">this</span><span class="p">.</span><span class="nx">removeAllCallouts</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeCallout</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">removeCallout</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()}},</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">d</span><span class="p">(</span><span class="nx">f</span><span class="p">)),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">opt</span><span class="p">,{</span><span class="nx">bubblePadding</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;bubblePadding&quot;</span><span class="p">),</span><span class="nx">bubbleWidth</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;bubbleWidth&quot;</span><span class="p">),</span><span class="nx">showNextButton</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;showNextButton&quot;</span><span class="p">),</span><span class="nx">showPrevButton</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;showPrevButton&quot;</span><span class="p">),</span><span class="nx">showCloseButton</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;showCloseButton&quot;</span><span class="p">),</span><span class="nx">arrowWidth</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;arrowWidth&quot;</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">updateButtons</span><span class="p">()),</span><span class="nx">b</span><span class="p">},</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">f</span><span class="o">?</span><span class="nx">l</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">valOrDefault</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="nx">a</span><span class="p">])},</span><span class="nx">x</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">||</span><span class="nx">m</span><span class="o">&gt;=</span><span class="nx">k</span><span class="p">.</span><span class="nx">steps</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">steps</span><span class="p">[</span><span class="nx">m</span><span class="p">]},</span><span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">u</span><span class="p">.</span><span class="nx">nextStep</span><span class="p">()},</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">v</span><span class="p">(),</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getPixelValue</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">k</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">getPixelValue</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getStepTarget</span><span class="p">(</span><span class="nx">x</span><span class="p">()),</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">(),</span><span class="nx">p</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">getScrollTop</span><span class="p">(),</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">bottom</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">getScrollTop</span><span class="p">(),</span><span class="nx">t</span><span class="o">=</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">k</span><span class="o">?</span><span class="nx">k</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">l</span><span class="o">&gt;</span><span class="nx">r</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getScrollTop</span><span class="p">(),</span><span class="nx">z</span><span class="o">=</span><span class="nx">y</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">getWindowHeight</span><span class="p">(),</span><span class="nx">A</span><span class="o">=</span><span class="nx">t</span><span class="o">-</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;scrollTopMargin&quot;</span><span class="p">);</span><span class="nx">t</span><span class="o">&gt;=</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">&lt;=</span><span class="nx">y</span><span class="o">+</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;scrollTopMargin&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">z</span><span class="o">&gt;=</span><span class="nx">u</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">()</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;smoothScroll&quot;</span><span class="p">)</span><span class="o">?</span><span class="k">typeof</span> <span class="nx">YAHOO</span><span class="o">!==</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="o">!==</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="o">!==</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="o">!==</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Scroll</span><span class="o">!==</span><span class="nx">o</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">webkit</span><span class="o">?</span><span class="nx">s</span><span class="p">.</span><span class="nx">body</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Easing</span><span class="o">?</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Easing</span><span class="p">.</span><span class="nx">easeOut</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Scroll</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">scroll</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="nx">A</span><span class="p">]}},</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;scrollDuration&quot;</span><span class="p">)</span><span class="o">/</span><span class="mi">1</span><span class="nx">e3</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">onComplete</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">animate</span><span class="p">())</span><span class="o">:</span><span class="nx">q</span><span class="o">?</span><span class="nx">jQuery</span><span class="p">(</span><span class="s2">&quot;body, html&quot;</span><span class="p">).</span><span class="nx">animate</span><span class="p">({</span><span class="nx">scrollTop</span><span class="o">:</span><span class="nx">A</span><span class="p">},</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;scrollDuration&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">t</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">y</span><span class="o">-</span><span class="nx">A</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;scrollDuration&quot;</span><span class="p">)</span><span class="o">/</span><span class="mi">10</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getScrollTop</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&gt;=</span><span class="nx">A</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="o">&gt;=</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">A</span><span class="p">,</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(),</span><span class="nb">window</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">getScrollTop</span><span class="p">()</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">))},</span><span class="nx">g</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">A</span><span class="p">),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">())},</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">m</span><span class="o">+</span><span class="nx">a</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">+</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">steps</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="o">+=</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">x</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getStepTarget</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeEventCallbacks</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">),</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))},</span><span class="nx">d</span><span class="p">.</span><span class="nx">delay</span><span class="o">?</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">delay</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">())</span><span class="o">:</span><span class="nx">b</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">v</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">hide</span><span class="p">().</span><span class="nx">_removeCTACallback</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">valOrDefault</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">multipage</span><span class="o">:</span><span class="nx">m</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">steps</span><span class="p">[</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">multipage</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">endTour</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeEventCallbacks</span><span class="p">(</span><span class="s2">&quot;next&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">onNext</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeEventCallbacks</span><span class="p">(</span><span class="s2">&quot;prev&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">onPrev</span><span class="p">)),</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">setState</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;cookieName&quot;</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">valOrDefault</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">f</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">showStep</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">endTour</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">))},</span><span class="o">!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;skipIfNoElement&quot;</span><span class="p">))</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">+</span><span class="nx">b</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">+</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">steps</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">+=</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">(),</span><span class="o">!</span><span class="nx">h</span><span class="p">.</span><span class="nx">getStepTarget</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">invokeEventCallbacks</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">endTour</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">m</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;id&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;steps&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getState</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;cookieName&quot;</span><span class="p">)),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="mi">10</span><span class="p">)),</span><span class="k">this</span><span class="p">},</span><span class="nx">D</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getStepTarget</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeEventCallbacks</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">),</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;skipIfNoElement&quot;</span><span class="p">))</span><span class="k">return</span> <span class="nx">A</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">(</span><span class="nx">m</span><span class="p">)}},</span><span class="nx">E</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">steps</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">steps</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">v</span><span class="p">(),</span><span class="nx">j</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getStepTarget</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">.</span><span class="nx">show</span><span class="p">(),</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeEventCallbacks</span><span class="p">(</span><span class="s2">&quot;show&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">onShow</span><span class="p">)},</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">hide</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">===</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">nextOnTargetClick</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEvtListener</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">y</span><span class="p">)}),</span><span class="nx">h</span><span class="p">.</span><span class="nx">setState</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;cookieName&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">configure</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">getCalloutManager</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">c</span><span class="o">===</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">e</span><span class="p">),</span><span class="nx">c</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">startTour</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">||</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)),</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">!==</span><span class="nx">o</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">k</span><span class="p">.</span><span class="nx">steps</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;Specified step number out of bounds.&quot;</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">documentIsReady</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="o">||</span><span class="nx">k</span><span class="p">.</span><span class="nx">id</span><span class="o">!==</span><span class="nx">n</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">r</span><span class="o">===</span><span class="nx">o</span><span class="o">?</span><span class="nx">m</span><span class="o">||</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">D</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">getStepTarget</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">steps</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeEventCallbacks</span><span class="p">(</span><span class="s2">&quot;start&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">v</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">hide</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">isActive</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">getStepTarget</span><span class="p">(</span><span class="nx">x</span><span class="p">())</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">showStep</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeEventCallbacks</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">),</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;skipIfNoElement&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">nextStep</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">endTour</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}),</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">p</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">showStep</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">steps</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">delay</span><span class="o">?</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">delay</span><span class="p">)</span><span class="o">:</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">prevStep</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">B</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">nextStep</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">x</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getStepTarget</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">nextOnTargetClick</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeEvtListener</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">y</span><span class="p">),</span><span class="nx">B</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">endTour</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">v</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">valOrDefault</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">valOrDefault</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">hide</span><span class="p">(),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">clearState</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;cookieName&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">isActive</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isActive</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">invokeEventCallbacks</span><span class="p">(</span><span class="s2">&quot;end&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">removeCallbacks</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">resetDefaultOptions</span><span class="p">(),</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">getCurrTour</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">k</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">getCurrTarget</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">getStepTarget</span><span class="p">(</span><span class="nx">x</span><span class="p">())},</span><span class="k">this</span><span class="p">.</span><span class="nx">getCurrStepNum</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">m</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">listen</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">push</span><span class="p">({</span><span class="nx">cb</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">fromTour</span><span class="o">:</span><span class="nx">c</span><span class="p">}),</span><span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">unlisten</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">removeCallbacks</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">i</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="nx">f</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">fromTour</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">d</span><span class="o">--</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="o">--</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">registerHelper</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">unregisterHelper</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">invokeHelper</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">setCookieName</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">cookieName</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">resetDefaultOptions</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">f</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">resetDefaultI18N</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">g</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">getState</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">getState</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;cookieName&quot;</span><span class="p">))},</span><span class="nx">t</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;next&quot;</span><span class="p">,</span><span class="s2">&quot;prev&quot;</span><span class="p">,</span><span class="s2">&quot;start&quot;</span><span class="p">,</span><span class="s2">&quot;end&quot;</span><span class="p">,</span><span class="s2">&quot;show&quot;</span><span class="p">,</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="s2">&quot;close&quot;</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">resetDefaultOptions</span><span class="p">(),</span><span class="nx">h</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">i18n</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="o">++</span><span class="nx">e</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">j</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">configure</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="nx">F</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">n</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">)}(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;hopscotch&quot;</span><span class="p">);</span></div></pre></div>
            </td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2013 <span title="0.06873s from github-fe111-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/linkedin/hopscotch/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

